[{"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\index.js":"1","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\App.jsx":"2","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\store.js":"3","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\userReducer.js":"4","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\fileReducer.js":"5","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Navbar\\Navbar.jsx":"6","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Registration.jsx":"7","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Login.jsx":"8","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\user.js":"9","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Spinner\\Spinner.jsx":"10","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Disk.jsx":"11","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\file.js":"12","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\FileList.jsx":"13","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\File\\File.jsx":"14","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Popup.jsx":"15","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\Uploader\\Uploader.jsx":"16","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\Uploader\\UploadFile.jsx":"17","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\uploadReducer.js":"18","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\utils\\sizeFormat.js":"19","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\config.js":"20","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Profile\\Profile.jsx":"21"},{"size":277,"mtime":1610352473582,"results":"22","hashOfConfig":"23"},{"size":1565,"mtime":1611679672778,"results":"24","hashOfConfig":"23"},{"size":523,"mtime":1611307652594,"results":"25","hashOfConfig":"23"},{"size":967,"mtime":1610477299382,"results":"26","hashOfConfig":"23"},{"size":2494,"mtime":1611475311374,"results":"27","hashOfConfig":"23"},{"size":2530,"mtime":1611689595650,"results":"28","hashOfConfig":"23"},{"size":3114,"mtime":1610477464737,"results":"29","hashOfConfig":"23"},{"size":2452,"mtime":1610474377914,"results":"30","hashOfConfig":"23"},{"size":2591,"mtime":1611681030649,"results":"31","hashOfConfig":"23"},{"size":397,"mtime":1606198991546,"results":"32","hashOfConfig":"23"},{"size":5691,"mtime":1611475814425,"results":"33","hashOfConfig":"23"},{"size":4775,"mtime":1611680493749,"results":"34","hashOfConfig":"23"},{"size":1908,"mtime":1611477804236,"results":"35","hashOfConfig":"23"},{"size":4581,"mtime":1611565858856,"results":"36","hashOfConfig":"23"},{"size":1201,"mtime":1610656682347,"results":"37","hashOfConfig":"23"},{"size":968,"mtime":1611309071551,"results":"38","hashOfConfig":"23"},{"size":833,"mtime":1611311228505,"results":"39","hashOfConfig":"23"},{"size":1471,"mtime":1611311832756,"results":"40","hashOfConfig":"23"},{"size":310,"mtime":1611321792821,"results":"41","hashOfConfig":"23"},{"size":47,"mtime":1611668005967,"results":"42","hashOfConfig":"23"},{"size":2089,"mtime":1611689469539,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"b5z3tc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\index.js",[],["92","93"],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\App.jsx",["94"],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\store.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\userReducer.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\fileReducer.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Navbar\\Navbar.jsx",["95","96"],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Registration.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Login.jsx",["97","98"],"import React from 'react';\r\nimport {Input, Button, Form, Modal} from \"antd\";\r\nimport './auth.scss'\r\nimport 'antd/dist/antd.css';\r\nimport {HomeTwoTone} from '@ant-design/icons';\r\nimport {registration} from \"../../actions/user.js\";\r\nimport {login} from \"../../actions/user.js\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst layout = {\r\n    wrapperCol: {\r\n        span: 24,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 4,\r\n        span: 16,\r\n    },\r\n};\r\n\r\n\r\nconst Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onFinish = (values) => {\r\n        dispatch(login(values.email, values.password))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"registration\">\r\n            <HomeTwoTone style={{fontSize: 36}}/>\r\n            <div className=\"registration__header\">\r\n                Авторизация\r\n            </div>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Пожалуйста, введите ваш email!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input size='large' placeholder=\"Введите email\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Пожалуйства, введите ваш пароль!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password size='large' placeholder=\"Введите пароль\"/>\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button size='large' type=\"primary\" htmlType=\"submit\">\r\n                        Войти\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\user.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Spinner\\Spinner.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Disk.jsx",["99","100"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getFiles, uploadFile} from \"../../Redux/actions/file.js\";\r\nimport {LeftCircleTwoTone, FolderAddTwoTone, FileAddTwoTone, HomeOutlined, AppstoreOutlined, BarsOutlined } from '@ant-design/icons';\r\nimport {Tooltip, Select} from \"antd\";\r\nimport \"./disk.scss\"\r\nimport FileList from \"./FileList/FileList.jsx\";\r\nimport Popup from \"./Popup.jsx\";\r\nimport {\r\n    setPopupDisplay,\r\n    setCurrentDir,\r\n    setCurrentDirName,\r\n    breadCrumbHandlerAction,\r\n    setFilesView\r\n} from \"../../Redux/fileReducer.js\";\r\nimport { Breadcrumb } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport Uploader from \"./FileList/Uploader/Uploader.jsx\";\r\nconst { Option } = Select;\r\n\r\n\r\nconst Disk = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const currentDir = useSelector(state => state.files.currentDir)\r\n    const currentDirName = useSelector(state => state.files.currentDirName)\r\n    const dirStack = useSelector(state => state.files.dirStack)\r\n    const [dragEnter, setDragEnter] = useState(false)\r\n    const [sort, setSort] = useState('type')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getFiles(currentDir, sort))\r\n    }, [currentDir, sort])\r\n\r\n    const createDirHandler = () => {\r\n        dispatch(setPopupDisplay(true))\r\n    }\r\n\r\n    const backClickHandler = () => {\r\n        const backDir = dirStack.pop()\r\n        dispatch(setCurrentDirName(backDir?.name))\r\n        dispatch(setCurrentDir(backDir?.id))\r\n    }\r\n    const breadCrumbHandler = (item) => {\r\n        dispatch(breadCrumbHandlerAction(dirStack.indexOf(item)))\r\n        dispatch(setCurrentDirName(item.name))\r\n        dispatch(setCurrentDir(item.id))\r\n    }\r\n\r\n    const fileUploadHandler = (event) => {\r\n        const files = [...event.target.files]\r\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\r\n    }\r\n\r\n    const dragEnterHandler = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setDragEnter(true)\r\n    }\r\n\r\n    const dragLeaveHandler = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setDragEnter(false)\r\n    }\r\n\r\n    const dropHandler = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        let files = [...e.dataTransfer.files]\r\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\r\n        setDragEnter(false)\r\n    }\r\n\r\n\r\n    return (\r\n        !dragEnter ?\r\n            <div className=\"disk\" onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler}\r\n                 onDragOver={dragEnterHandler}>\r\n                    <div className=\"disk__navigation\">\r\n                        <Tooltip placement=\"bottom\" title={\"Назад\"} color={\"blue\"}>\r\n                            {currentDir&&<LeftCircleTwoTone style={{cursor: 'pointer'}} onClick={() => backClickHandler()}/>}\r\n                        </Tooltip>\r\n                        <div className=\"disk__breadcrumb\">\r\n                        <Breadcrumb>\r\n                            {dirStack.map((item,index)=><Breadcrumb.Item key={index} onClick={()=>breadCrumbHandler(item)}><a>{item.name? item.name : <HomeOutlined />}</a></Breadcrumb.Item>)}\r\n                            <Breadcrumb.Item>{currentDirName}</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        </div>\r\n                    </div>\r\n                <div className=\"disk__btns\">\r\n                    <Tooltip placement=\"bottom\" title={\"Создать новую папку\"} color={\"blue\"}>\r\n                        <FolderAddTwoTone style={{cursor: 'pointer'}}\r\n                                          onClick={() => createDirHandler()}/>\r\n                    </Tooltip>\r\n                    <div className=\"disk__upload\">\r\n                        <Tooltip placement=\"bottom\" title={\"Загрузить файл\"} color={\"blue\"}>\r\n                            <label htmlFor=\"disk__upload-input\" className=\"disk__upload-label\">\r\n                                <FileAddTwoTone style={{cursor: 'pointer'}}/></label>\r\n                        </Tooltip>\r\n                        <input onChange={(event) => fileUploadHandler(event)} type=\"file\" id=\"disk__upload-input\"\r\n                               className=\"disk__upload-input\"/>\r\n                    </div>\r\n                    <div className=\"disk__select\">\r\n                        сортировать по:{\" \"}{\" \"}\r\n                    <Select  defaultValue=\"type\" value={sort} style={{ width: 120, fontSize: 18 }} onChange={(e)=>setSort(e)}>\r\n                        <Option value=\"type\">типу</Option>\r\n                        <Option value=\"name\">имени</Option>\r\n                        <Option value=\"date\">дате</Option>\r\n                    </Select>\r\n                    </div>\r\n                    <Tooltip placement=\"bottom\" title={\"Плитка\"}>\r\n                    <AppstoreOutlined style={{marginLeft:12,cursor: 'pointer'}} onClick={()=>dispatch(setFilesView(\"plate\"))}/>\r\n                    </Tooltip>\r\n                    <Tooltip placement=\"bottom\" title={\"Список\"}>\r\n                    <BarsOutlined style={{marginLeft:12,cursor: 'pointer'}} onClick={()=>dispatch(setFilesView(\"list\"))}/>\r\n                    </Tooltip>\r\n                </div>\r\n                <FileList/>\r\n                <Popup/>\r\n                <Uploader/>\r\n            </div>\r\n            :\r\n            <div className=\"drop-area\" onDrop={dropHandler} onDragEnter={dragEnterHandler}\r\n                 onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\r\n                Перетащите файлы сюда\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Disk;","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\file.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\FileList.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\File\\File.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Popup.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\Uploader\\Uploader.jsx",["101","102"],"import React from 'react';\r\nimport UploadFile from \"./UploadFile.jsx\";\r\nimport \"./uploader.scss\"\r\nimport { Button, notification } from 'antd';\r\nimport {CloseOutlined } from '@ant-design/icons';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {showUploader} from \"../../../../Redux/uploadReducer.js\";\r\n\r\nconst Uploader = () => {\r\n    const dispatch = useDispatch()\r\n    const files = useSelector(state=> state.upload.files)\r\n    const isVisible = useSelector(state => state.upload.isVisible)\r\n\r\n    return (isVisible &&\r\n        <div className=\"uploader\">\r\n        <div className=\"uploader__header\">\r\n            <div className=\"uploader__title\">\r\n                Загрузки\r\n            </div>\r\n            <div className=\"close-button\" onClick={()=>dispatch(showUploader(!isVisible))}><CloseOutlined /></div>\r\n        </div>\r\n        {files.map((item)=><UploadFile key={item.id} file={item}/>)}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Uploader;","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\Uploader\\UploadFile.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\uploadReducer.js",["103"],"const SHOW_UPLOADER = \"SHOW_UPLOADER\"\r\nconst ADD_UPLOAD_FILE = 'ADD_UPLOAD_FILE'\r\nconst REMOVE_UPLOAD_FILE = 'REMOVE_UPLOAD_FILE'\r\nconst CHANGE_UPLOAD_FILE = 'CHANGE_UPLOAD_FILE'\r\n\r\n\r\nconst initialState = {\r\n    isVisible: false,\r\n    files: []\r\n}\r\n\r\nexport const uploadReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_UPLOADER:\r\n            return {\r\n                ...state,\r\n                isVisible: action.payload\r\n            }\r\n        case ADD_UPLOAD_FILE:\r\n            return {\r\n                ...state, files: [...state.files, action.payload]\r\n            }\r\n        case REMOVE_UPLOAD_FILE:\r\n            return {\r\n                ...state, files: [...state.files.filter(file => file.id !== action.payload)]\r\n            }\r\n        case CHANGE_UPLOAD_FILE:\r\n            return {\r\n                ...state, files: [...state.files.map(file=> file.id == action.payload.id\r\n                    ?\r\n                    {...file, progress: action.payload.progress}\r\n                    : {...file}\r\n                )]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const showUploader = item => ({type: SHOW_UPLOADER, payload:item})\r\nexport const addUploadFile = item => ({type: ADD_UPLOAD_FILE, payload:item})\r\nexport const removeUploadFile = fileId => ({type: REMOVE_UPLOAD_FILE, payload:fileId})\r\nexport const changeUploadFile = payload => ({type: CHANGE_UPLOAD_FILE, payload:payload})\r\n","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\utils\\sizeFormat.js",["104"],"\r\nexport default (size) => {\r\n    if(size > 1024*1024*1024) {\r\n        return (size/(1024*1024*1024)).toFixed(1)+\"Gb\"\r\n    }\r\n    if(size > 1024*1024) {\r\n        return (size/(1024*1024)).toFixed(1)+\"Mb\"\r\n    }\r\n    if(size > 1024) {\r\n        return (size/(1024)).toFixed(1)+\"Kb\"\r\n    }\r\n    return size+\"B\"\r\n}","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\config.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Profile\\Profile.jsx",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":21,"column":8,"nodeType":"112","endLine":21,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":53,"column":78,"nodeType":"116","endLine":53,"endColumn":81},{"ruleId":"117","severity":1,"message":"118","line":54,"column":122,"nodeType":"116","endLine":54,"endColumn":161},{"ruleId":"119","severity":1,"message":"120","line":2,"column":30,"nodeType":"121","messageId":"122","endLine":2,"endColumn":35},{"ruleId":"119","severity":1,"message":"123","line":6,"column":9,"nodeType":"121","messageId":"122","endLine":6,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":35,"column":8,"nodeType":"112","endLine":35,"endColumn":26,"suggestions":"124"},{"ruleId":"114","severity":1,"message":"115","line":88,"column":124,"nodeType":"116","endLine":88,"endColumn":127},{"ruleId":"119","severity":1,"message":"125","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"126","line":4,"column":18,"nodeType":"121","messageId":"122","endLine":4,"endColumn":30},{"ruleId":"127","severity":1,"message":"128","line":29,"column":69,"nodeType":"129","messageId":"130","endLine":29,"endColumn":71},{"ruleId":"131","severity":1,"message":"132","line":2,"column":1,"nodeType":"133","endLine":13,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":21,"column":48,"nodeType":"116","endLine":21,"endColumn":89},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["136"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'registration' is defined but never used.",["137"],"'Button' is defined but never used.","'notification' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [dispatch]",{"range":"142","text":"143"},"Update the dependencies array to be: [currentDir, dispatch, sort]",{"range":"144","text":"145"},[795,797],"[dispatch]",[1224,1242],"[currentDir, dispatch, sort]"]