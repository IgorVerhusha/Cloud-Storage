[{"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\index.js":"1","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\App.jsx":"2","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\store.js":"3","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\userReducer.js":"4","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\fileReducer.js":"5","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Navbar\\Navbar.jsx":"6","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Registration.jsx":"7","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Login.jsx":"8","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\user.js":"9","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Spinner\\Spinner.jsx":"10","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Disk.jsx":"11","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\file.js":"12","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\FileList.jsx":"13","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\File\\File.jsx":"14","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Popup.jsx":"15"},{"size":277,"mtime":1610352473582,"results":"16","hashOfConfig":"17"},{"size":1434,"mtime":1610713860917,"results":"18","hashOfConfig":"17"},{"size":444,"mtime":1610352391190,"results":"19","hashOfConfig":"17"},{"size":967,"mtime":1610477299382,"results":"20","hashOfConfig":"17"},{"size":1546,"mtime":1611257521113,"results":"21","hashOfConfig":"17"},{"size":1141,"mtime":1610706593577,"results":"22","hashOfConfig":"17"},{"size":3114,"mtime":1610477464737,"results":"23","hashOfConfig":"17"},{"size":2452,"mtime":1610474377914,"results":"24","hashOfConfig":"17"},{"size":1651,"mtime":1610692957171,"results":"25","hashOfConfig":"17"},{"size":397,"mtime":1606198991546,"results":"26","hashOfConfig":"17"},{"size":3458,"mtime":1611138399188,"results":"27","hashOfConfig":"17"},{"size":3547,"mtime":1611260071192,"results":"28","hashOfConfig":"17"},{"size":676,"mtime":1610623875056,"results":"29","hashOfConfig":"17"},{"size":2000,"mtime":1611257904678,"results":"30","hashOfConfig":"17"},{"size":1201,"mtime":1610656682347,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"b5z3tc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\index.js",[],["67","68"],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\App.jsx",["69"],"import React, {useEffect} from 'react';\nimport \"./App.scss\"\nimport Navbar from \"./components/Navbar/Navbar.jsx\";\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport Registration from \"./components/Auth/Registration.jsx\";\nimport Login from \"./components/Auth/Login.jsx\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {auth} from \"./Redux/actions/user.js\";\nimport Spinner from \"./components/Spinner/Spinner.jsx\";\nimport Disk from \"./components/Disk/Disk.jsx\";\n\n\nconst App = () => {\n    const isAuth = useSelector(state => state.user.isAuth)\n    const isFetching = useSelector(state => state.user.isFetching)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(auth())\n    }, [])\n    return (\n    <BrowserRouter>\n        { isFetching ? <Spinner/> :\n        <div className=\"app\">\n            <Navbar/>\n            <div className=\"wrapper\">\n                {!isAuth ?\n                    <Switch>\n                    <Route path=\"/registration\" component={Registration}/>\n                    <Route path=\"/login\" component={Login}/>\n                    <Redirect to=\"/\" />\n                </Switch> :\n                    <Switch>\n                        <Route exact path=\"/\" component={Disk}/>\n                        <Redirect to=\"/\" />\n                    </Switch>\n                }\n            </div>\n        </div>}\n    </BrowserRouter>\n    );\n};\n\nexport default App;","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\store.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\userReducer.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\fileReducer.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Navbar\\Navbar.jsx",["70"],"import React from 'react';\r\nimport {CloudTwoTone} from '@ant-design/icons';\r\nimport './navbar.scss'\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {logout} from \"../../Redux/userReducer.js\";\r\n\r\n\r\nconst Navbar = () => {\r\n    const isAuth = useSelector(state => state.user.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('tokenCloud')\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"container\">\r\n                <CloudTwoTone style={{fontSize: 38}}/>\r\n                <div className=\"navbar__header\">CLOUD STORAGE</div>\r\n                {!isAuth && <div className=\"navbar__login\"><NavLink to=\"/login\">Войти</NavLink></div>}\r\n                {!isAuth &&\r\n                <div className=\"navbar__registration\"><NavLink to=\"/registration\">Регистрация</NavLink></div>}\r\n                {isAuth && <div className=\"navbar__login\" onClick={onLogout}><a>Выход</a></div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Registration.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Auth\\Login.jsx",["71","72"],"import React from 'react';\r\nimport {Input, Button, Form, Modal} from \"antd\";\r\nimport './auth.scss'\r\nimport 'antd/dist/antd.css';\r\nimport {HomeTwoTone} from '@ant-design/icons';\r\nimport {registration} from \"../../actions/user.js\";\r\nimport {login} from \"../../actions/user.js\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst layout = {\r\n    wrapperCol: {\r\n        span: 24,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 4,\r\n        span: 16,\r\n    },\r\n};\r\n\r\n\r\nconst Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onFinish = (values) => {\r\n        dispatch(login(values.email, values.password))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"registration\">\r\n            <HomeTwoTone style={{fontSize: 36}}/>\r\n            <div className=\"registration__header\">\r\n                Авторизация\r\n            </div>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Пожалуйста, введите ваш email!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input size='large' placeholder=\"Введите email\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Пожалуйства, введите ваш пароль!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password size='large' placeholder=\"Введите пароль\"/>\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button size='large' type=\"primary\" htmlType=\"submit\">\r\n                        Войти\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\user.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Spinner\\Spinner.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Disk.jsx",["73"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getFiles, uploadFile} from \"../../Redux/actions/file.js\";\r\nimport {LeftCircleTwoTone, FolderAddTwoTone, FileAddTwoTone} from '@ant-design/icons';\r\nimport {Tooltip} from \"antd\";\r\nimport \"./disk.scss\"\r\nimport FileList from \"./FileList/FileList.jsx\";\r\nimport Popup from \"./Popup.jsx\";\r\nimport {setPopupDisplay, setCurrentDir} from \"../../Redux/fileReducer.js\";\r\n\r\nconst Disk = () => {\r\n    const dispatch = useDispatch()\r\n    const currentDir = useSelector(state => state.files.currentDir)\r\n    const dirStack = useSelector(state => state.files.dirStack)\r\n    const [dragEnter, setDragEnter] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getFiles(currentDir))\r\n    }, [currentDir])\r\n\r\n    const createDirHandler = () => {\r\n        dispatch(setPopupDisplay(true))\r\n    }\r\n\r\n    const backClickHandler = () => {\r\n        const backDirId = dirStack.pop()\r\n        dispatch(setCurrentDir(backDirId))\r\n    }\r\n\r\n    const fileUploadHandler = (event) => {\r\n        const files = [...event.target.files]\r\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\r\n    }\r\n\r\n    const dragEnterHandler = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setDragEnter(true)\r\n    }\r\n\r\n    const dragLeaveHandler = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setDragEnter(false)\r\n    }\r\n\r\n    const dropHandler = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        let files = [...e.dataTransfer.files]\r\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\r\n        setDragEnter(false)\r\n    }\r\n\r\n    return (!dragEnter ?\r\n            <div className=\"disk\" onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler}\r\n                 onDragOver={dragEnterHandler}>\r\n                <div className=\"disk__btns\">\r\n                    <Tooltip placement=\"bottom\" title={\"Назад\"} color={\"blue\"}>\r\n                        <LeftCircleTwoTone style={{cursor: 'pointer'}} onClick={() => backClickHandler()}/>\r\n                    </Tooltip>\r\n                    <Tooltip placement=\"bottom\" title={\"Создать новую папку\"} color={\"blue\"}>\r\n                        <FolderAddTwoTone style={{cursor: 'pointer', marginLeft: 30}}\r\n                                          onClick={() => createDirHandler()}/>\r\n                    </Tooltip>\r\n                    <div className=\"disk__upload\">\r\n                        <Tooltip placement=\"bottom\" title={\"Загрузить файл\"} color={\"blue\"}>\r\n                            <label htmlFor=\"disk__upload-input\" className=\"disk__upload-label\">\r\n                                <FileAddTwoTone style={{cursor: 'pointer'}}/></label>\r\n                        </Tooltip>\r\n                        <input onChange={(event) => fileUploadHandler(event)} type=\"file\" id=\"disk__upload-input\"\r\n                               className=\"disk__upload-input\"/>\r\n                    </div>\r\n                </div>\r\n                <FileList/>\r\n                <Popup/>\r\n            </div>\r\n            :\r\n            <div className=\"drop-area\" onDrop={dropHandler} onDragEnter={dragEnterHandler}\r\n                 onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\r\n                Перетащите файлы сюда\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Disk;","D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\Redux\\actions\\file.js",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\FileList.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\FileList\\File\\File.jsx",[],"D:\\education\\web\\Ulbi TV\\Cloud Storage\\client\\src\\components\\Disk\\Popup.jsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":20,"column":8,"nodeType":"80","endLine":20,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":26,"column":78,"nodeType":"84","endLine":26,"endColumn":81},{"ruleId":"85","severity":1,"message":"86","line":2,"column":30,"nodeType":"87","messageId":"88","endLine":2,"endColumn":35},{"ruleId":"85","severity":1,"message":"89","line":6,"column":9,"nodeType":"87","messageId":"88","endLine":6,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":19,"column":8,"nodeType":"80","endLine":19,"endColumn":20,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["93"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'registration' is defined but never used.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [dispatch]",{"range":"99","text":"100"},"Update the dependencies array to be: [currentDir, dispatch]",{"range":"101","text":"102"},[739,741],"[dispatch]",[794,806],"[currentDir, dispatch]"]